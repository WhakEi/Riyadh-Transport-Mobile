// Generated by view binder compiler. Do not edit!
package com.riyadhtransport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.riyadhtransport.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStationDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView arrivalsRecycler;

  @NonNull
  public final MaterialButton showOnMapButton;

  @NonNull
  public final TextView stationName;

  @NonNull
  public final Chip stationTypeChip;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityStationDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView arrivalsRecycler, @NonNull MaterialButton showOnMapButton,
      @NonNull TextView stationName, @NonNull Chip stationTypeChip,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.arrivalsRecycler = arrivalsRecycler;
    this.showOnMapButton = showOnMapButton;
    this.stationName = stationName;
    this.stationTypeChip = stationTypeChip;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStationDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStationDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_station_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStationDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrivals_recycler;
      RecyclerView arrivalsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (arrivalsRecycler == null) {
        break missingId;
      }

      id = R.id.show_on_map_button;
      MaterialButton showOnMapButton = ViewBindings.findChildViewById(rootView, id);
      if (showOnMapButton == null) {
        break missingId;
      }

      id = R.id.station_name;
      TextView stationName = ViewBindings.findChildViewById(rootView, id);
      if (stationName == null) {
        break missingId;
      }

      id = R.id.station_type_chip;
      Chip stationTypeChip = ViewBindings.findChildViewById(rootView, id);
      if (stationTypeChip == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityStationDetailsBinding((LinearLayout) rootView, arrivalsRecycler,
          showOnMapButton, stationName, stationTypeChip, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
