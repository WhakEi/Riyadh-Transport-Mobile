// Generated by view binder compiler. Do not edit!
package com.riyadhtransport.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.riyadhtransport.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRouteDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView routeSegmentsRecycler;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView totalTime;

  private ActivityRouteDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView routeSegmentsRecycler, @NonNull MaterialToolbar toolbar,
      @NonNull TextView totalTime) {
    this.rootView = rootView;
    this.routeSegmentsRecycler = routeSegmentsRecycler;
    this.toolbar = toolbar;
    this.totalTime = totalTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRouteDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRouteDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_route_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRouteDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.route_segments_recycler;
      RecyclerView routeSegmentsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (routeSegmentsRecycler == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.total_time;
      TextView totalTime = ViewBindings.findChildViewById(rootView, id);
      if (totalTime == null) {
        break missingId;
      }

      return new ActivityRouteDetailsBinding((LinearLayout) rootView, routeSegmentsRecycler,
          toolbar, totalTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
